"""Add first_name/last_name to users and backfill

Revision ID: 37aa17390959
Revises: e1d3f13d84a4
Create Date: 2025-08-26 14:52:51.844806

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '37aa17390959'
down_revision = 'e1d3f13d84a4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    op.add_column("user", sa.Column("first_name", sa.String(length=80), nullable=True))
    op.add_column("user", sa.Column("last_name", sa.String(length=80), nullable=True))

    # --- Backfill from existing full_name (or replace with 'name' if that's your field) ---
    conn = op.get_bind()
    # Pull rows to Python to split safely (handles multi-word first names)
    users = conn.execute(sa.text("SELECT id, full_name FROM \"user\"")).fetchall()
    for row in users:
        full = (row.full_name or "").strip()
        if not full:
            first, last = None, None
        else:
            parts = full.split()
            if len(parts) == 1:
                first, last = parts[0], None
            else:
                # take last token as last name; everything before is first name
                first = " ".join(parts[:-1])
                last = parts[-1]
        conn.execute(
            sa.text('UPDATE "user" SET first_name=:fn, last_name=:ln WHERE id=:id'),
            {"fn": first, "ln": last, "id": row.id},
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_column("user", "last_name")
    op.drop_column("user", "first_name")

    # ### end Alembic commands ###
